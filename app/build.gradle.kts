/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4/userguide/building_java_projects.html
 */

plugins {
    java
    application
    checkstyle
    pmd
    id("com.github.spotbugs") version "5.0.6"
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("com.github.sherter.google-java-format") version "0.9"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}

allprojects {
    apply(plugin = "checkstyle")
    apply(plugin = "pmd")
    apply(plugin = "com.github.spotbugs")

    tasks.withType<Test> {
        ignoreFailures = true
        useJUnitPlatform()
    }

    pmd {
        ruleSets = listOf()
        ruleSetConfig = resources.text.fromFile("${project.rootProject.projectDir}/config/pmd/pmd.xml")
        isIgnoreFailures = true
    }

    checkstyle {
        isIgnoreFailures = true
    }
    
    spotbugs {
    	excludeFilter.set(file("${project.rootProject.projectDir}/config/spotbugs/excludes.xml"))
    }
}

val javaFXModules = listOf(
    "base",
    "controls",
    "fxml",
    "swing",
    "graphics"
)

val supportedPlatforms = listOf("linux", "mac", "win") // All required for OOP
val javaFxVersion = 15

dependencies {
	  // This dependency is used by the application.
    implementation("com.google.guava:guava:30.1.1-jre")

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
	  implementation("com.google.code.gson:gson:2.9.0")

    // Use JUnit test framework.
    testImplementation("junit:junit:4.13.2")

    // JavaFX: comment out if you do not need them
    for (platform in supportedPlatforms) {
        for (module in javaFXModules) {
            implementation("org.openjfx:javafx-$module:$javaFxVersion:$platform")
        }
    }
}

tasks.withType<JavaCompile> {
    options.encoding = "UTF-8"
}

application {
    // Define the main class for the application.
    mainClass.set("wazzle.Launcher")
}
